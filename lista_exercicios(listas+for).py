# -*- coding: utf-8 -*-
"""Lista Exercicios(Listas+For).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UKNuspOgWz1LyrZlHYfp0pwucidd0S9g

1) Crie uma lista qualquer e faça um programa que imprima cada elemento da lista usando o for.
"""

lista = 'guilherme'
lista_1 = list(lista)

for caracteres in lista_1:
  print(caracteres)

"""2)Faça um programa que peça para o usuário digitar um número n e imprima uma lista com todos os números de 0 a n-1."""

numero = int(input("Digite seu numero: "))
lista = []

for numeros in range(0,numero):
  lista.append(numeros)

print(lista)

"""3) Faça um programa que olhe todos os itens de uma lista e diga quantos deles são pares."""

lista = [1,2,3,4,5,6,7,8,9,10]

pares = 0

for elementos in lista:
  if  elementos % 2 == 0:
    pares +=1

print(f"Na lista existem {pares} pares")  
#print(f"Na lista tem {len(lista_par)} números pares que são: {lista_par}")

"""4) Agora usando a função max() faça um programa que imprima os três maiores números de uma lista.

Dica: Use o método próprio de listas .remove().
"""

lista = [1,2,3,4,5,6,7,8,9,10]

for elemento in range(3):
  maior_numero = max(lista)
  print(maior_numero)
  lista.remove(maior_numero)

"""5) Faça um programa que imprima o maior número de uma lista, sem usar a função max().

"""

lista = [10,255,3,4,5,6,7,8,9,1]
maior = lista[0]

for elementos in lista:
  if elementos > maior:
    maior = elementos

print(maior)

lista = [1, 4, -8, 12, 3, -5, 2, -14, 6]
maior = lista[0]
for elemento in lista:
    if elemento > maior:
        maior = elemento
print("O maior elemento da lista é", maior)

"""6) Faça um programa que, dadas duas listas de mesmo tamanho, crie uma nova lista com cada elemento igual a soma dos elementos da lista 1 com os da lista 2, na mesma posição.

Exemplo:

Dadas lista1 = [1, 4, 5] e lista2 = [2, 2, 3], então lista3 = [1+2, 4+2, 5+3] = [3, 6, 8]
"""

lista_1 = [90,4,8,32]
lista_2 = [10,6,9,10]
lista_3 = []

i = 0

for i in range(len(lista_1)):
  lista_3.append(lista_1[i] + lista_2[i])
  i += 1

print(lista_3)

"""7) Faça um programa que pede para o usuário digitar 5 números e, ao final, imprime uma lista com os 5 números digitados pelo usuário (sem converter os números para int ou float).

Exemplo: Se o usuário digitar 1, 5, 2, 3, 6, o programa deve imprimir a lista ['1','5','2','3','6']
"""

lista = []

for numero in range(5):
  numero = input("Digite um numero: ")
  lista.append(numero)

lista

"""8) Pegue a lista gerada no exercício anterior e transforme cada um dos itens dessa lista em um float.

OBS: Não é para alterar o programa anterior, mas sim a lista gerada por ele.
"""

lista = []

for numero in range(5):
  numero = input("Digite um numero: ")
  lista.append(numero)

for indice in range(len(lista)):
  lista[indice] = float(lista[indice])

lista

"""9) Faça um programa que peça as 4 notas bimestrais e mostre a média aritmética delas, usando listas."""

notas = []

for resultado in range(4):
  resultado = float(input("Digite sua nota: "))
  notas.append(resultado)

media = sum(notas) / len(notas)

print(f"Suas notas foram: {notas}")
print(f"Sua média foi: {media}")

"""10) Crie uma lista de 10 números e imprima:

a. uma lista com os 4 primeiros números;

b. uma lista com os 5 últimos números;

c. uma lista contendo apenas os elementos das posições pares;

d. uma lista contendo apenas os elementos das posições ímpares;

e. a lista inversa da lista sorteada (isto é, uma lista que começa com o último elemento da lista sorteada e termina com o primeiro);

f. uma lista inversa dos 5 primeiros números;

g. uma lista inversa dos 5 últimos números.
"""

import random
lista = random.sample(range(100), 10)

print(lista)
print(f"Os quatro primeiros números são: {lista[0:4]}")
print(f"Os cinco últimos números são: {lista[-5:]}")
print(f"O números pares são: {lista[1::2]}")
print(f"Os números impares são: {lista[::2]}")
print(f"A lista invertida é: {lista[::-1]}")
print(f"Os 5 primeiros números inversos são: {lista[-6::-1]}")
print(f"Os 5 últimos numeros inversos são: {lista[-1:-6:-1]}")

"""11) Faça um programa que sorteia 10 números entre 0 e 100 e conte quantos números sorteados são maiores que 50.

Obs.: Precisa usar a biblioteca random
"""

import random
lista = random.sample(range(100), 10)
lista_50 = []
print(lista)
for elemento in lista:
  if elemento > 50:
    lista_50.append(elemento)

print(f"{len(lista_50)} números são maiores do que 50")

"""12) Faça um programa que sorteie 10 números entre 0 e 100 e imprima:

a. o maior número sorteado;

b. o menor número sorteado;

c. a média dos números sorteados;

d. a soma dos números sorteados.

Obs.: Precisa usar a biblioteca random
"""

import random
random.sample
lista = random.sample(range(100), 10)
print(lista)

print(max(lista))
print(min(lista))
print(sum(lista) / len(lista))
print(sum(lista))

"""13) Super Desafio - Faça um programa que pede para o usuário digitar o CPF e verifica se ele é válido. Para isso, primeiramente o programa deve multiplicar cada um dos 9 primeiros dígitos do CPF pelos números de 10 a 2 e somar todas as respostas. O resultado deve ser multiplicado por 10 e dividido por 11. O resto dessa divisão deve ser igual ao primeiro dígito verificador (10º dígito). Em seguida, o programa deve multiplicar cada um dos 10 primeiros dígitos do CPF pelos números de 11 a 2 e repetir o procedimento anterior para verificar o segundo dígito verificador.

Exemplo:

Se o CPF for 286.255.878-87 o programa deve fazer primeiro:

x = (2x10 + 8x9 + 6x8 + 2x7 + 5x6 + 5x5 + 8x4 + 7x3 + 8x2)

Em seguida, o programa deve testar se xx10%11 == 8 (o décimo número do CPF). Se sim, o programa deve calcular:

x = (2x11 + 8x10 + 6x9 + 2x8 + 5x7 + 5x6 + 8x5 + 7x4 + 8x3 + 8x2)

e verificar se x vezes 10%11 == 7 (o décimo primeiro número do CPF).
"""

cpf = list(input("Digite seu cpf: "))
for i in range(len(cpf)):
  cpf[i] = int(cpf[i])

soma = 0
for i in range(9):
  soma = soma + cpf[i] * (10-i)

if (soma*10) % 11 == cpf[9]:
  soma = 0
  for i in range(10):
    soma = soma + cpf[i]* (11-i)
  if (soma*10) % 11 == cpf[10]:
      print("Cpf Válido")
  else:
      print("Cpf inválido")
else:
  print("Cpf Inválido")